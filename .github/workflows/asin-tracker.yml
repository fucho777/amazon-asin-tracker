name: Amazon ASIN Tracker

on:
  schedule:
    # 1分に1回実行
    - cron: '0 */2 * * *'
  workflow_dispatch:
    inputs:
      mode:
        description: '実行モード'
        required: false
        default: 'all'
        type: choice
        options:
          - all
          - discount-only
          - stock-only
          - dry-run
      amazon_only:
        description: 'Amazonが販売している商品のみを対象にする'
        required: false
        default: false
        type: boolean

jobs:
  track-asins:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install python-dotenv requests tweepy
    
    - name: Ensure directories exist
      run: |
        mkdir -p .logs

    - name: Run ASIN tracker
      env:
        PA_API_KEY: ${{ secrets.PA_API_KEY }}
        PA_API_SECRET: ${{ secrets.PA_API_SECRET }}
        PARTNER_TAG: ${{ secrets.PARTNER_TAG }}
        THREADS_APP_ID: ${{ secrets.THREADS_APP_ID }}
        THREADS_APP_SECRET: ${{ secrets.THREADS_APP_SECRET }}
        THREADS_LONG_LIVED_TOKEN: ${{ secrets.THREADS_LONG_LIVED_TOKEN }}
        THREADS_INSTAGRAM_ACCOUNT_ID: ${{ secrets.THREADS_INSTAGRAM_ACCOUNT_ID }}
        TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
        TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
        TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
      run: |
        # 実行モードに応じてコマンドラインオプションを設定
        MODE="${{ github.event.inputs.mode || 'all' }}"
        AMAZON_ONLY="${{ github.event.inputs.amazon_only || 'false' }}"
        RUN_OPTIONS=""
        
        case $MODE in
          "discount-only")
            RUN_OPTIONS="--discount-only"
            ;;
          "stock-only")
            RUN_OPTIONS="--stock-only"
            ;;
          "dry-run")
            RUN_OPTIONS="--dry-run"
            ;;
          *)
            RUN_OPTIONS=""
            ;;
        esac
        
        # Amazonのみオプション
        if [ "$AMAZON_ONLY" = "true" ]; then
          RUN_OPTIONS="$RUN_OPTIONS --amazon-only"
        fi
        
        # 実行日時を含む一意のログファイル名を生成
        TIMESTAMP=$(date +"%Y%m%d_%H%M%S")
        LOG_FILE=".logs/asin_tracker_${TIMESTAMP}.log"
        
        # スクリプト実行
        python amazon_asin_tracker.py $RUN_OPTIONS | tee -a $LOG_FILE
        
        # 最新のログファイルへのシンボリックリンクを作成
        ln -sf $LOG_FILE .logs/latest.log
    
    - name: Commit changes
      run: |
        git config --global user.name 'GitHub Actions Bot'
        git config --global user.email 'actions@github.com'
        
        # 追跡対象ファイルの確認（存在するファイルのみ追加）
        FILES_TO_COMMIT=""
        
        if [ -f "asin_results.json" ]; then
          FILES_TO_COMMIT="${FILES_TO_COMMIT} asin_results.json"
        fi
        
        if [ -f "asin_tracker.log" ]; then
          FILES_TO_COMMIT="${FILES_TO_COMMIT} asin_tracker.log"
        fi
        
        # ログディレクトリ
        if [ -d ".logs" ]; then
          FILES_TO_COMMIT="${FILES_TO_COMMIT} .logs"
        fi
        
        # ファイルが存在する場合のみgit addを実行
        if [ -n "${FILES_TO_COMMIT}" ]; then
          git add ${FILES_TO_COMMIT}
          
          # 変更がある場合のみコミットとプッシュ
          if git diff --staged --quiet; then
            echo "変更はありません"
          else
            git commit -m "Update tracking results [automated] $(date +%Y-%m-%d_%H:%M:%S)"
            git push
          fi
        else
          echo "コミット対象のファイルが見つかりません"
        fi
